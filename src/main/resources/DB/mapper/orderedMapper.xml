<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.food.project.ordered.OrderedDAO">

	<resultMap type="OrderedVO" id="MarketOrderMap">
		<id column="num" property="num"/> 
		<result column="memberNum" property="memberNum"/>
		<result column="marketNum" property="marketNum"/>
		<result column="menuNum" property="menuNum"/>
		<result column="marketName" property="marketName"/>
		<result column="menuName" property="menuName"/>
		<result column="menuThumbImg" property="menuThumbImg"/>
		<result column="cateMenuOptions" property="cateMenuOptions"/>
		<result column="pcs" property="pcs"/>
		<result column="amount" property="amount"/>
		<result column="isCart" property="isCart"/>
		<result column="imp_uid" property="imp_uid"/>
		<result column="merchant_uid" property="merchant_uid"/>
		<result column="pg" property="pg"/>
		<result column="pay_method" property="pay_method"/>
		<result column="apply_num" property="apply_num"/>
		<result column="cancleType" property="cancleType"/>
		<result column="cancleDetail" property="cancleDetail"/>
		<result column="isOrderChecked" property="isOrderChecked"/>
		<result column="isReview" property="isReview"/>
		<result column="timeLag" property="timeLag"/>
		<result column="createAt" property="createAt"/>
		<result column="updateAt" property="updateAt"/>
		<result column="deleteAt" property="deleteAt"/>
		
		<association property="memberVO" javaType="MemberVO">
			<result column="id" property="id"/>
			<result column="name" property="name"/>
		</association>
	</resultMap>

	<!-- 먼저 주문한 사람이 먼저 보이도록 할거임(ASC) -->
	<select id="marketOrder" parameterType="OrderedVO" resultMap="MarketOrderMap">
		SELECT o.*, m.id, m.name FROM
		(SELECT * FROM ordered WHERE marketNum = 4 AND isOrderChecked = 1) o 
		join member m
		ON (o.memberNum = m.num)
		ORDER BY o.updateAt
	</select>

	<select id="orderedCount" resultType="Long">
		select ordered_seq.nextval from dual
	</select>

	<select id="orderedList" parameterType="OrderedVO" resultType="OrderedVO">
		SELECT * FROM ordered WHERE 
		memberNum=#{memberNum} AND 
		isOrderChecked=#{isOrderChecked} AND
		isCart=#{isCart} AND
		deleteAt IS NULL
		ORDER BY updateAt DESC
	</select>
	
	<select id="orderedListNot" parameterType="OrderedVO" resultType="OrderedVO">
		SELECT * FROM ordered WHERE 
		memberNum=#{memberNum} AND 
		isOrderChecked!=#{isOrderChecked} AND 
		deleteAt IS NULL
		ORDER BY updateAt DESC
	</select>
	
	<select id="orderedMarketList" parameterType="OrderedVO" resultType="OrderedVO">
		SELECT * FROM ordered WHERE 
		marketNum=#{marketNum} AND 
		isOrderChecked=#{isOrderChecked} AND 
		deleteAt IS NULL
		ORDER BY updateAt DESC
	</select>
	
	
	<select id="orderedSelect" parameterType="OrderedVO" resultType="OrderedVO">
		SELECT * FROM ordered WHERE num=#{num}
	</select>
	
	<!-- 테이블에 값 입력 -->
	<insert id="orderedInsert" parameterType="OrderedVO">
		INSERT INTO ordered VALUES(
			#{num}, #{memberNum}, #{marketNum},#{menuNum},#{marketName},#{menuName},#{menuThumbImg}, #{cateMenuOptions, jdbcType=VARCHAR}, 
			#{pcs}, #{amount}, #{isCart}, #{imp_uid, jdbcType=VARCHAR}, #{merchant_uid, jdbcType=VARCHAR}, #{pg, jdbcType=VARCHAR}, 
			#{pay_method, jdbcType=VARCHAR}, #{apply_num, jdbcType=VARCHAR}, #{cancleType, jdbcType=INTEGER}, 
			#{cancleDetail, jdbcType=VARCHAR}, #{isOrderChecked}, #{isReview}, #{timeLag}, sysdate, sysdate, null
		)
	</insert>
	
	<!-- 마켓에서 주문 확인 -->
	<update id="orderedConfirm" parameterType="OrderedVO">
		UPDATE ordered SET isOrderChecked=2, updateAt=sysdate WHERE num=#{num} AND deleteAt IS NOT NULL
	</update>
	
	<!-- 결제 완료 없데이트 -->
	<update id="orderedDone" parameterType="OrderedVO">
		UPDATE ordered SET 
		imp_uid=#{imp_uid, jdbcType=VARCHAR}, merchant_uid=#{merchant_uid, jdbcType=VARCHAR}, 
		pg=#{pg, jdbcType=VARCHAR}, pay_method=#{pay_method}, apply_num=#{apply_num, jdbcType=VARCHAR}, 
		isOrderChecked=1, updateAt=sysdate WHERE num=#{num}
	</update>
	
	<!-- isReview 없데이트 -->
	<update id="orderedIsReviewUpdate" parameterType="OrderedVO">
		UPDATE ordered SET isReview = #{isReview} WHERE num=#{num}
	</update>
	
	<!-- 결제 후, 지우기(UPDATE deleteAt) -->
	<update id="orderedCancle" parameterType="OrderedVO">
		UPDATE ordered SET cancleType=#{cancleType}, cancleDetail=#{cancleDetail, jdbcType=VARCHAR}, deleteAt=sysdate WHERE num=#{num}
	</update>
	
	<!-- 해당 멤버의 ordered 전부 지우기 -->
	<delete id="cartDeleteAll" parameterType="OrderedVO">
		DELETE FROM ordered WHERE memberNum=#{memberNum} AND isOrderChecked = 0 AND isCart = #{isCart}
	</delete>
	
	<!-- 장바구니에서 지우기(DELETE) -->
	<delete id="orderDelete" parameterType="OrderedVO">
		DELETE FROM ordered WHERE num = #{num}
	</delete>
	
</mapper>